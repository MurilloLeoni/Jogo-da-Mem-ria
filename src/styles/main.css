/* Propriedades Body */
body{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #fc1e8a;
    user-select: none;
}
/* Propriedades container */
.container{
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 30px;
    background: linear-gradient(325deg,
    #03001e 0%,
    #7303c0 30%,
    #ec38bc 70%,
    #fdeff9 100%
    );
    padding: 40px 60px;
}
/* Propriedades H2 */
h2{
    font-size: 3em;
    color: #fff;
    text-transform: uppercase;
    letter-spacing: 0.1em;
}
/* Propriedades botão reset */
.reset{
    padding: 15px 20px;
    width: 100%;
    color: #000;
    background-color: #fff;
    border: none;
    font-size: 1.5em;
    text-transform: uppercase;
    font-weight: 600;
    letter-spacing: 0.1em;
    cursor: pointer;
}

/* Quando clicar no botão de reset, ele altera de cor */
.reset:focus{
    color: red;
    background-color: black;
}
/* Propriedades do game, onde ficam os cards */
.game{
    width: 432px;
    height: 432px;
    border: 1px solid #000;
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    transform-style: preserve-3d;
    perspective: 500px;
}

/* Propriedades dos cards */
.item{
    position: relative;
    height: 100px;
    width: 100px;
    align-items: center;
    display: flex;
    justify-content: center;
    background-color: #fff;
    font-size: 3em;
    transform: rotateY(180);
    transition: 0.25s;
}

/* Propriedades de um pseudo-elemento, no caso serve para esconder os cards */
.item::after{
    content: "";
    position: absolute;    /*Define a posição do pseudo-elemento como absoluta em relação ao elemento pai */
    inset: 0;              /*Deixa exatamente iguais o top e right do elemento pai */
    background: #404040;
    transition: 0.25s;     /*Aplica uma transição de 0.25 segundos a todas as propriedades que mudam ao longo do tempo.*/
    transform: rotateY(0deg); /*define a rotação ao longo do eixo Y como 0 graus*/
    backface-visibility: hidden; /*esconde o lado traseiro (backface) do elemento quando girado */
}

/* Propriedade do boxOpen, quando usuário clicar em algum card, o card se transforma em um boxOpen */
.item.boxOpen{
    transform: rotateY(0deg);
}

.boxOpen::after{
    transform: rotateY(180deg);
}